
/// Mixin to customize scrollbars
/// Beware, this does not work in all browsers
/// @author Hugo Giraudel
/// @param {Length} $size - Horizontal scrollbar's height and vertical scrollbar's width
/// @param {Color} $foreground-color - Scrollbar's color
/// @param {Color} $background-color [mix($foreground-color, white, 50%)] - Scrollbar's color
/// @example scss - Scrollbar styling
///   @include scrollbars(.5em, slategray);
@mixin scrollbars($size, $foreground-color, $background-color: mix($foreground-color, white,  50%)) {
  // For Google Chrome
  ::-webkit-scrollbar {
      width:  $size;
      height: $size;
  }

  ::-webkit-scrollbar-thumb {
      background: $foreground-color;
  }

  ::-webkit-scrollbar-track {
      background: $background-color;
  }

  // For Internet Explorer
  body {
    scrollbar-face-color: $foreground-color;
    scrollbar-track-color: $background-color;
  }
}


@mixin font-size($size: null, $line-height: false){
    
    @if $size == null{
        $size: $font-size-base;    
    }
                
    font-size: $size;
    font-size: 1rem * (strip-unit($size)/10);
        
    @if $line-height != false{
        
        line-height: (strip-unit($size)/($base-size/$baseline-grid))/strip-unit($size);
        
    }
    
}


@mixin transition($properties: 'all') {
    
    transition: $transition-func $transition-dur;
    transition-property: $properties;
    
}


@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	
    $src: local(quote($name));

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}
    
	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
    
}


@mixin fit-container {
    
    position: absolute;
    
    left: 0;
    top: 0;

    margin: auto;
    
    width: 100%;
    height: 100%;
    
}


@mixin inverse{
    
    $inverse-color: invert($text-color) !default;
    $inverse-link-color: invert($link-color) !default;
    
    color: $inverse-color;
    border-color: $inverse-color;
    outline-color: $inverse-color;
    
    a{
        color: $inverse-link-color;
        
        &:hover,
        &:focus{
            color: $link-hover-color;
        }
    }
    
}


@mixin web-font($name, $weight: null, $style: null){

    $font    : $name;
    $prefix  : "#{$weight}#{$style}";   
        
    @if $prefix != "" {
        $font: $font + "-" + $prefix;
    }
    
    $font-path: $font + "/" + $font;
    
    $font-files: font-files(
        "#{$font-path}.woff",
        "#{$font-path}.ttf",
        "#{$font-path}.svg#" + "#{$name}#{$prefix}"
    );
    
    @include font-face($name, $font-files, $font-path + ".eot", $weight, $style);
    
}


@mixin input-placeholder{

    &::-webkit-input-placeholder {
        @content;
    }

    &:-moz-placeholder { /* Firefox 18- */
        @content;
    }

    &::-moz-placeholder {  /* Firefox 19+ */
        opacity: 1;
        @content;
    }

    &:-ms-input-placeholder {  
        @content;
    }
    
}


@mixin headings{
 
    h1, .h1,
    h2, .h2,
    h3, .h3,
    h4, .h4,
    h5, .h5,
    h6, .h6,
    .heading{
        
        @content;
        
    }
    
}