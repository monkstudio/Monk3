<?phpnamespace Monk\Config;use Monk\Utils;define("MONK_CONFIG", true);/** * @todo Document me */function after_setup_theme(){        /**     * Thanks Soil but we'll do our own thing.     */    remove_filter('embed_oembed_html', 'Roots\Soil\CleanUp\embed_wrap');    }add_action('after_setup_theme', __NAMESPACE__ . '\after_setup_theme', 999);/** * @todo Docuemnt me */function embed_oembed_html($html, $url, $attr, $post_id){        return "<div class='embed-responsive embed-responsive-16by9'>$html</div>";    }add_filter('embed_oembed_html', __NAMESPACE__ . '\embed_oembed_html', 10, 4);/** * Register supported scripts for enqueuing in monk_enqueue_assets(). */function register_assets() {    /**     * Register Google Maps API v3     */    wp_register_script('googlemaps', 'https://maps.googleapis.com/maps/api/js', [], '3', true);    }add_action('wp_enqueue_scripts', __NAMESPACE__ . '\register_assets', 9);/** * Wrapper for the AssetComponent API rigged to the wp_enqueue_scripts hook. */function enqueue_assets() {    $component = new \Monk\Assets\AssetComponent('');    $handle = $component->get_component()['name'];        wp_enqueue_style($handle);    wp_enqueue_script($handle);    /** Initialise global MONK variable * */    wp_localize_script("$handle-core", 'Monk', [        'ON_MONK' => ON_MONK ? true : false,        'WP_ENV' => WP_ENV    ]);}add_action('wp_enqueue_scripts', __NAMESPACE__ . '\\enqueue_assets', 99);/** * Tell WordPress to use searchform.php from the partials/ directory */function get_search_form($form = '') {    ob_start();    if(get_partial('searchform', get_template_slug()))        $form = ob_get_contents();    ob_end_clean();    return $form;}add_filter('get_search_form', __NAMESPACE__ . '\\get_search_form');/** * Filename-based cache busting.  *  * @param type $src * @return type */function asset_version( $src ) {    /*     * Disable cache busting during development mode. This is mainly because it      * interferes with Chrome's dev tool workspaces     */    if(            current_theme_supports('ep-cache-busting')         &&  !ON_MONK        &&  WP_ENV !== 'development'        &&  preg_match( '/ver=([\d\.]+)/i', $src, $m )    )        $src = preg_replace('/\.(css|js)(?:$|\?)/DiS', "." . str_replace( '.', '', $m[1] ) . ".$1", remove_query_arg( 'ver', $src ));    return $src;}add_filter('script_loader_src'	, __NAMESPACE__ . '\\asset_version', 99, 1);add_filter('style_loader_src'	, __NAMESPACE__ . '\\asset_version', 99, 1);function google_maps_src_params($src, $handle){    if($handle === 'googlemaps'){        $src .= "?" . build_query ([           'callback'  => apply_filters('monk/map/callback', 'monkStartMap')         ] + (is_string($key = get_theme_support('monk-google-maps')) ? ['key' => $key] : []));        remove_filter('script_loader_src', __NAMESPACE__ . '\\google_maps_src_params', 99, 2);    }    return $src;}add_filter('script_loader_src', __NAMESPACE__ . '\\google_maps_src_params', 99, 2);   // Remove injected CSS from galleryfunction remove_gallery_style($css) {        return preg_replace( "!<style type='text/css'>.*?</style>!s", '', $css );}add_filter( 'gallery_style', __NAMESPACE__ . '\\remove_gallery_style' , 1, 1); // clean up gallery output in wp// Force disable default gallery inline CSSadd_filter('use_default_gallery_style', '__return_false');/** * Add and remove body_class() classes */function body_class($classes) {     if(defined('ON_MONK') && ON_MONK)        $classes[] = 'ON_MONK';        if(has_post_thumbnail(get_queried_object()))        $classes[] = 'has-image';    return $classes;}add_filter('body_class', __NAMESPACE__ . '\\body_class');/** * Force Contact Form 7 plugin to use HTML5 fallbacks when used on older browsers. * NOTE: This will cause the plugin to enqueue more assets than it otherwise would, thus disabled by default. * Enable only if absolutely needed. */// add_filter( 'wpcf7_support_html5_fallback', '__return_true');/** * Patch for WordPress' wpauto filter that can wrap P tags around non-phrasing content. */add_filter('the_content', 'Monk\Utils\strip_invalid_pees', 99);/* * Auto email encrypt post content. *  * Don't forget this is currently only rigged to the_content filter hook. Email address displayed by other means such as widgets may need to be * manually encryted. */current_theme_supports('monk-email-encrypt')     && add_filter('the_content', 'Monk\Utils\email_encode', 12); // After shortcodes are rendered/** * Move Modernizr & jQuery to head if registered. *  * Since printing scripts in the head is the exception rather than the rule, by default the component asset manager will register ALL scripts * to the footer unless overriden by a filter. */function default_scripts_to_head($default, $handle){    $defaults = ['jquery', 'monk-modernizr'];    if(in_array($handle, $defaults))            return !true;    return $default;}add_filter('monk/assets/component/js_to_footer', __NAMESPACE__ . '\\default_scripts_to_head', 1, 2);/** *  */function is_active_sidebar($is_active, $index){    $checks = ['is_front_page'];    if($index === 'sidebar' and Utils\conditionalTagCheck($checks))        return false;    return $is_active;}add_filter('is_active_sidebar', __NAMESPACE__ . '\\is_active_sidebar', 10, 2);//add_action('wp_footer', __NAMESPACE__ . '\\display_sql_queries', 99);/** *  */current_theme_supports("monk-base-template")    && add_filter('template_include', ['Monk\Router', 'init'], 999);function media_custom_sizes( $sizes ) {        return array_merge( $sizes, [        'full-width' => __( 'Page Width' )    ] );    }add_filter( 'image_size_names_choose', __NAMESPACE__ . '\\media_custom_sizes' );/** * Filter the HTML attributes applied to a menu item's anchor element and includes the following additions: *  * - Adds the menu item description as a data attribute. */function nav_menu_link_attributes($atts, $item, $args, $depth){        empty($item->description)        || $atts['data-description'] = esc_attr($item->description);        return $atts;    }add_filter('nav_menu_link_attributes', __NAMESPACE__ . '\nav_menu_link_attributes', 10, 4);/** *  */add_filter('monk\map\infowindow', 'do_shortcode', 11);/** *  * @global int $content_width */function post_edit_form_tag($post){    global $content_width;        // view imbedded media at a more comfortable size in the post editor.    $content_width = 600;    }add_action('post_edit_form_tag', __NAMESPACE__ . '\post_edit_form_tag');/** *  */function wp_get_attachment_image_attributes($attr, $attachment, $size){        $attr['class'] .= ' img-responsive';        return $attr;    }add_action('wp_get_attachment_image_attributes', __NAMESPACE__ . '\wp_get_attachment_image_attributes', 10, 3);/** * Support for Yoast SEO breadcrumbs */function wpseo_breadcrumb_single_link_wrapper(){    return 'li';}add_filter('wpseo_breadcrumb_single_link_wrapper', __NAMESPACE__ . '\wpseo_breadcrumb_single_link_wrapper');function wpseo_breadcrumb_separator(){    return '';}add_filter('wpseo_breadcrumb_separator', __NAMESPACE__ . '\wpseo_breadcrumb_separator');function wpseo_breadcrumb_output_wrapper(){    return 'ol';}add_filter('wpseo_breadcrumb_output_wrapper', __NAMESPACE__ . '\wpseo_breadcrumb_output_wrapper');function wpseo_breadcrumb_output_class($class){    return $class . ' breadcrumb';}add_filter('wpseo_breadcrumb_output_class', __NAMESPACE__ . '\wpseo_breadcrumb_output_class');function wpseo_breadcrumb_single_link($link_output){    return preg_replace('|^(<s)|', '</li><li class="active">$1', $link_output);}add_filter('wpseo_breadcrumb_single_link', __NAMESPACE__ . '\wpseo_breadcrumb_single_link');/** * Automatic updates for All plugins */add_filter( 'auto_update_plugin', ON_MONK ? '__return_true' : '__return_false' );